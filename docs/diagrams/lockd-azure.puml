@startuml
' Detailed flow for Azure Blob backend

skin rose

actor Client
participant "HTTP Handler" as Handler
participant "JSON Compactor" as Compactor
participant "Azure Store (azblob)" as Azure
database "meta/<key>.json" as MetaBlob
database "state/<key>.json" as StateBlob

== Acquire ==
Client -> Handler: POST /v1/acquire
Handler -> Azure: DownloadStream(meta blob)
Azure -> MetaBlob: GET
alt Not found
    MetaBlob --> Azure: 404
    Azure --> Handler: ErrNotFound
else Found
    MetaBlob --> Azure: JSON + ETag
    Azure --> Handler: meta + etag
end
Handler -> Handler: lease_id, fencing := prev+1
Handler -> Azure: UploadStream(meta blob, updated lease)\nIf-Match old_etag or If-None-Match "*"
alt Precondition failed
    Azure --> Handler: ErrCASMismatch
else Success
    MetaBlob --> Azure: stored + new ETag
    Azure --> Handler: new_meta_etag
end
Handler --> Client: 200 AcquireResponse\nX-Fencing-Token

== KeepAlive ==
Client -> Handler: POST /v1/keepalive\nX-Fencing-Token
Handler -> Azure: UploadStream(meta blob, new expires)\nIf-Match meta_etag
Azure --> Handler: new_meta_etag
Handler --> Client: 200 KeepAlive

== GetState ==
Client -> Handler: POST /v1/get_state
Handler -> Azure: DownloadStream(state blob)
alt Not found
    Azure --> Handler: ErrNotFound
else
    StateBlob --> Azure: stream + ETag + size
    Azure --> Handler: stream + info
    Handler --> Client: 200 stream\nheaders: ETag, X-Key-Version, X-Fencing-Token
end

== UpdateState ==
Client -> Handler: POST /v1/update_state\nbody, CAS headers, X-Fencing-Token
Handler -> Compactor: compact JSON
Compactor --> Handler: stream
Handler -> Azure: UploadStream(state blob, stream)\nIf-Match expected_etag
alt Precondition failed
    Azure --> Handler: ErrCASMismatch
else
    StateBlob --> Azure: stored + new ETag
    Azure --> Handler: new_state_etag
end
Handler -> Azure: UploadStream(meta blob, version+1, state_etag)\nIf-Match meta_etag
Azure --> Handler: new_meta_etag
Handler --> Client: 200 {new_version, new_state_etag, bytesâ‰ˆstreamed}\nheaders: ETag, X-Key-Version, X-Fencing-Token

== Release ==
Client -> Handler: POST /v1/release
Handler -> Azure: UploadStream(meta blob, lease cleared)\nIf-Match meta_etag
Azure --> Handler: new_meta_etag
Handler --> Client: 200 {released:true}

@enduml
